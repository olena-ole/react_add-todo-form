{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TextField/TextField.tsx","components/SelectField/SelectField.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","TextField","value","formTouched","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","touched","setTouched","hasError","errorMessage","test","trim","htmlFor","event","target","onBlur","type","SelectField","options","disabled","option","todosWithUsers","userId","usersFromServer","find","App","count","setCount","setTitle","setUserId","setFormTouched","setTodos","maxIndex","max","handleSubmit","preventDefault","newTodo","prevTodos","prev","onSubmit","newTitle","newUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.929e7e7e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { TodoWithUser } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { TodoWithUser } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  formTouched: boolean,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  formTouched,\n  label = name,\n  placeholder = `Enter a ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n\n  let hasError = false;\n  let errorMessage = '';\n\n  // eslint-disable-next-line max-len\n  const pattern = /^(?=.*[a-zA-Z0-9А-ЩЬЮЯҐЄІЇа-щьюяґєії])[a-zA-Z0-9А-ЩЬЮЯҐЄІЇа-щьюяґєії\\s]*$/u;\n\n  if (name === 'title') {\n    hasError = touched && required && !pattern.test(value);\n    errorMessage = 'Only UA or EN letters, digits, and spaces are allowed';\n  }\n\n  if (!value.trim()) {\n    hasError = touched && required && !value.trim();\n    errorMessage = `Please enter a ${name}`;\n  }\n\n  if (formTouched) {\n    hasError = required && !value.trim();\n    errorMessage = `Please enter a ${name}`;\n  }\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={id}>Title: </label>\n      <input\n        id={id}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        onBlur={() => setTouched(true)}\n        type=\"text\"\n        data-cy=\"titleInput\"\n        placeholder={placeholder}\n      />\n      {hasError && (\n        <span className=\"error\">{errorMessage}</span>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types';\n\ntype Props<T> = {\n  name: string,\n  value: string,\n  options: T[]\n  formTouched: boolean,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const SelectField: React.FC<Props<User>> = ({\n  name,\n  value,\n  options,\n  formTouched,\n  label = name,\n  placeholder = `Enter a ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const hasError = required && formTouched && value === '0';\n  const errorMessage = `Please choose a ${name}`;\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={id}>User: </label>\n\n      <select\n        id={id}\n        value={value}\n        onChange={event => onChange(event.target.value)}\n        data-cy=\"userSelect\"\n        placeholder={placeholder}\n      >\n\n        <option value=\"0\" disabled>Choose a user</option>\n\n        {options.map(option => (\n          <option value={option.id} key={option.id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n\n      {hasError && (\n        <span className=\"error\">{errorMessage}</span>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo, TodoWithUser, User } from './types';\nimport { TodoList } from './components/TodoList';\nimport { TextField } from './components/TextField';\nimport { SelectField } from './components/SelectField';\n\nconst todosWithUsers: TodoWithUser[] = todosFromServer.map((todo: Todo) => {\n  const user: User | null = usersFromServer.find(({ id }) => id === todo.userId)\n    || null;\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App: React.FC = () => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [formTouched, setFormTouched] = useState(false);\n  const [todos, setTodos] = useState(todosWithUsers);\n\n  const maxIndex = Math.max(...todos.map(({ id }) => id));\n\n  // #region handlers\n  const handleTitleChange = (newTitle: string) => {\n    setTitle(newTitle);\n  };\n\n  const handleUserIdChange = (newUserId: string) => {\n    setUserId(newUserId);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId('0');\n    setFormTouched(false);\n    setCount(prev => prev + 1);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() || userId === '0') {\n      setFormTouched(true);\n\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: maxIndex + 1,\n      title,\n      userId: +userId,\n      completed: false,\n      user: usersFromServer.find(user => user.id === +userId)\n        || null,\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n    reset();\n  };\n  // #endregion\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        key={count}\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <TextField\n          name=\"title\"\n          value={title}\n          onChange={handleTitleChange}\n          formTouched={formTouched}\n          required\n        />\n\n        <SelectField\n          name=\"user\"\n          value={userId}\n          onChange={handleUserIdChange}\n          options={usersFromServer}\n          formTouched={formTouched}\n          required\n        />\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}